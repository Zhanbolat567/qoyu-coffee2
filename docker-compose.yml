services:
  db:
    image: postgres:16-alpine
    container_name: qou-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qou_coffee
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d qou_coffee"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  backend:
    build:
      context: ./backend
    container_name: qoyu-backend
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - media:/media
    expose:
      - "8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/healthz >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: always

  web:
    build:
      context: ./frontend
      args:
        VITE_API_URL: /api        # фронт ходит на /api без CORS
    container_name: qoyu-web
    depends_on:
      - backend
    expose:
      - "80"
    restart: always
    # ВАЖНО: nginx-конфиг уже встроен в образ (frontend/nginx/default.conf).
    # НЕ монтируйте nginx.conf через volumes, чтобы избежать ошибок 'not a directory'.

  caddy:
    image: caddy:2.7-alpine
    container_name: qou-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web
      - backend
    restart: always

volumes:
  pg_data:
  media:
  caddy_data:
  caddy_config:
